$root = File.expand_path("../../../..", __FILE__)
puts $root
$:.unshift(File.expand_path("lib", $root))
require 'curtain'
require 'curtain/erubis'
require_relative 'account'
require_relative 'account_view'
require 'yaml'

def write_file(file, contents)
  out_file = File.join($root, 'tmp', file)
  out_dir = File.dirname(out_file)
  unless Dir.exists?(out_dir)
    mkdir_p out_dir
  end
  puts out_file
  open(out_file, 'w') {|f| f << contents }
end

desc "Build account page using ERB and no data"
task :erb do
  AccountView.template_directories = File.join(File.dirname(__FILE__), 'erb')
  view = AccountView.new
  write_file 'erb/account_blank.html', view.render("bootstrap", main: "account")
end

desc "Build the account page using ERB with data"
task :erb_with_data do
  AccountView.template_directories = File.join(File.dirname(__FILE__), 'erb')
  view = AccountView.new
  view.account = Account.new(YAML.load_file(File.expand_path('account.yml')))
  write_file 'erb/account.html', view.render("bootstrap", main: "account")
end

desc "Watch this directory for changes and run the default task when there are some"
task :watch do
  begin
    require 'listen'
  rescue LoadError
    puts "You must install the listen gem in order to use this task"
    exit 1
  end

  listener = Listen.to(File.join($root, 'lib'), File.join($root, 'test')) do |directories|
    puts "Detected change in #{directories.inspect}"
    system 'rake'
  end
  puts "Watching for changes..."
  listener.start
  trap("SIGINT") { exit! }
  sleep
end

desc "Build all examples"
task :default => [:erb, :erb_with_data]
